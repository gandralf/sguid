{"version":3,"sources":["../../src/bin/index.js"],"names":["yargs","command","desc","handler","keyPair","nacl","sign","console","log","secretKey","publicKey","demandCommand","argv"],"mappings":";;AAEA;;;;AACA;;;;AACA;;;;AAIA;AACAA,gBACGC,OADH,CACW;AACPA,WAAS,cADF;AAEPC,QAAM,8FAFC;AAGPC,WAAS,mBAAM;AACb,QAAMC,UAAUC,oBAAKC,IAAL,CAAUF,OAAV,EAAhB;;AAEA;AACAG,YAAQC,GAAR,CAAY,aAAZ,EAA2B,iCAAaJ,QAAQK,SAArB,CAA3B;;AAEA;AACAF,YAAQC,GAAR,CAAY,aAAZ,EAA2B,iCAAaJ,QAAQM,SAArB,CAA3B;AACD;AAXM,CADX,EAcGC,aAdH,CAciB,CAdjB,EAeGC,IAfH","file":"index.js","sourcesContent":["\n\nimport yargs from 'yargs';\nimport nacl from 'tweetnacl';\nimport {\n  encodeBase64\n} from 'tweetnacl-util';\n\n// eslint-disable-next-line no-unused-expressions\nyargs\n  .command({\n    command: 'new-key-pair',\n    desc: 'Generates new random key pair for signing. Returns base64 encoded secret key and public key.',\n    handler: () => {\n      const keyPair = nacl.sign.keyPair();\n\n      // eslint-disable-next-line no-console\n      console.log('secret key:', encodeBase64(keyPair.secretKey));\n\n      // eslint-disable-next-line no-console\n      console.log('public key:', encodeBase64(keyPair.publicKey));\n    }\n  })\n  .demandCommand(1)\n  .argv;\n"]}